[Default]

Version = 1
;; Used incase there is ever a breaking change, or to inform user in log about a new feature.

Strip Chars = ";[]"
;; List of characters to strip out
Strip Chars Mode = 0
;; 0 = Strip Bad Chars, 1 = Strip + Log Bad Chars, 2 = Return Error & Log Bad Chars
;;     Note: Logging on works when sending data to database.

Input SQF Parser = false
;; Expermential
;;   If enabled will use SQF Array Parser instead of : seperator for values
;;   i.e   0:SQL:UpdatePlayer:["Joe",[1,2,0],0.22333,"PlayerBackpack",-3]
;;   Advantage is that you don't need to strip : seperator from user inputted values

[insertVehicle]
SQL1_1 = INSERT INTO vehicles (faction, classname, type, pid, plate, customisation) VALUES (?,?,?,?,?,?);
SQL1_INPUTS = 1,2,3,4,5,6

[checkPlate]
SQL1_1 = SELECT plate FROM vehicles WHERE plate=?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING

[deleteVehicle]
SQL1_1 = DELETE FROM vehicles WHERE plate=?;
SQL1_INPUTS = 1

[storeVehicle]
SQL1_1 = UPDATE vehicles SET active=0, fuel=?, damage=?, impounded=? WHERE plate=?;
SQL1_INPUTS = 1,2,3,4

[fetchGarage]
SQL1_1 = SELECT classname, plate, customisation FROM vehicles WHERE pid=? AND active=0 AND faction=? AND type=? AND impounded=?;
SQL1_INPUTS = 1,2,3,4
OUTPUT = 1-STRING,2-STRING,3

[fetchAllGarage]
SQL1_1 = SELECT classname, plate, customisation FROM vehicles WHERE pid=? AND active=0 AND faction=? AND impounded=0;
SQL1_INPUTS = 1,2
OUTPUT = 1-STRING,2-STRING,3

[fetchVehicle]
SQL1_1 = SELECT classname, customisation, fuel, damage FROM vehicles WHERE plate=?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2,3,4

[setVehicleActive]
SQL1_1 = UPDATE vehicles SET active=1 WHERE plate=?;
SQL1_INPUTS = 1

[transferVehicle]
SQL1_1 = UPDATE vehicles SET pid=? WHERE plate=?;
SQL1_INPUTS = 1,2

[updateVehicle]
SQL1_1 = UPDATE vehicles SET customisation=? WHERE plate=?;
SQL1_INPUTS = 1,2

[selectPlayer]
SQL1_1 = SELECT id, cash, bank, copLevel, medLevel, dojLevel, licenses, jailStats, civGear, stats, position, phoneNumber, phoneContacts, phoneSettings, skills FROM players WHERE pid=?;
SQL1_INPUTS = 1
OUTPUT = 1,2,3,4,5,6,7,8,9,10,11,12-STRING,13,14,15

[checkNumber]
SQL1_1 = SELECT phoneNumber FROM players WHERE phoneNumber=?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING

[insertPlayer]
SQL1_1 = INSERT INTO players (pid, name, phoneNumber, phoneSettings) VALUES (?,?,?,?);
SQL1_INPUTS = 1,2,3,4

[selectCop]
SQL1_1 = SELECT copGear, copDepartment FROM players WHERE pid=?;
SQL1_INPUTS = 1
OUTPUT = 1,2

[selectMedic]
SQL1_1 = SELECT medGear, medDepartment FROM players WHERE pid=?;
SQL1_INPUTS = 1
OUTPUT = 1,2

[selectCiv]
SQL1_1 = SELECT civGear FROM players WHERE pid=?;
SQL1_INPUTS = 1
OUTPUT = 1

[updateCopRank]
SQL1_1 = UPDATE players SET copLevel=?, copDepartment =? WHERE pid=?;
SQL1_INPUTS = 1,2,3

[updateMedicRank]
SQL1_1 = UPDATE players SET medLevel=?, medDepartment =? WHERE pid=?;
SQL1_INPUTS = 1,2,3

[updateDoJRank]
SQL1_1 = UPDATE players SET dojLevel=? WHERE pid=?;
SQL1_INPUTS = 1,2

[updateLicenses]
SQL1_1 = UPDATE players SET licenses=? WHERE pid=?;
SQL1_INPUTS = 1,2

[civDisconnect]
SQL1_1 = UPDATE players SET position=?, civGear=?, name=?, stats=?, cash=?, bank=?, skills=?, jailStats=? WHERE pid=?;
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9

[copDisconnect]
SQL1_1 = UPDATE players SET position=?, copGear=?, name=?, stats=?, cash=?, bank=?, skills=?, jailStats=? WHERE pid=?;
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9

[medicDisconnect]
SQL1_1 = UPDATE players SET position=?, medGear=?, name=?, stats=?, cash=?, bank=?, skills=?, jailStats=? WHERE pid=?;
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9

[resetPositions]
SQL1_1 = UPDATE players SET position=? WHERE position!=?;
SQL1_INPUTS = 1,2

[resetVehicles]
SQL1_1 = UPDATE vehicles SET active=0 WHERE active=1;

[updateJail]
SQL1_1 = UPDATE players SET jailStats=? WHERE pid=?;
SQL1_INPUTS = 1,2

[updatePhoneSettings]
SQL1_1 = UPDATE players SET phoneSettings=? WHERE pid=?;
SQL1_INPUTS = 1,2

[updatePhoneContacts]
SQL1_1 = UPDATE players SET phoneContacts=? WHERE pid=?;
SQL1_INPUTS = 1,2

[updateCopGear]
SQL1_1 = UPDATE players SET copGear=? WHERE pid=?;
SQL1_INPUTS = 1,2

[updateMedicGear]
SQL1_1 = UPDATE players SET medGear=? WHERE pid=?;
SQL1_INPUTS = 1,2

[updateCivGear]
SQL1_1 = UPDATE players SET civGear=? WHERE pid=?;
SQL1_INPUTS = 1,2

[insertBuilding]
SQL1_1 = INSERT INTO houses (pid, pos, type) VALUES (?,?,?);
SQL1_INPUTS = 1,2,3

[initShops]
SQL1_1 = SELECT id, pid, pos, items, funds, name FROM shops;
OUTPUT = 1,2-STRING,3,4,5,6-STRING

[insertShop]
SQL1_1 = INSERT INTO shops (pid, pos, name) VALUES (?,?,?);
SQL1_INPUTS = 1,2,3

[insertedBuilding]
SQL1_1 = SELECT id FROM houses WHERE pos=? AND pid=?;
SQL1_INPUTS = 1,2
OUTPUT = 1

[insertedShop]
SQL1_1 = SELECT id FROM shops WHERE pos=? AND pid=?;
SQL1_INPUTS = 1,2
OUTPUT = 1

[updateShop]
SQL1_1 = UPDATE shops SET items=?, funds=? WHERE id=?;
SQL1_INPUTS = 1,2,3

[updateShopInventory]
SQL1_1 = UPDATE shops SET items=? WHERE id=?;
SQL1_INPUTS = 1,2

[updateShopFunds]
SQL1_1 = UPDATE shops SET funds=? WHERE id=?;
SQL1_INPUTS = 1,2

[updateShopName]
SQL1_1 = UPDATE shops SET name=? WHERE id=?;
SQL1_INPUTS = 1,2

[fetchHouses]
SQL1_1 = SELECT pos, furniture FROM houses WHERE pid=?;
SQL1_INPUTS = 1
OUTPUT = 1,2

[findName]
SQL1_1 = SELECT name FROM players WHERE pid=?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING

[getFurniture]
SQL1_1 = SELECT furniture FROM houses WHERE id=?;
SQL1_INPUTS = 1
OUTPUT = 1

[updateFurniture]
SQL1_1 = UPDATE houses SET furniture=? WHERE id=?;
SQL1_INPUTS = 1,2

[initHouses]
SQL1_1 = SELECT houses.id, houses.pid, houses.pos, houses.alarm, houses.shared, players.name FROM houses INNER JOIN players ON houses.pid = players.pid;
OUTPUT = 1,2-STRING,3,4,5,6-STRING

[updateAlarm]
SQL1_1 = UPDATE houses SET alarm=? WHERE id=?;
SQL1_INPUTS = 1,2

[updateKeys]
SQL1_1 = UPDATE houses SET shared=? WHERE id=?;
SQL1_INPUTS = 1,2

[deleteCompany]
SQL1_1 = DELETE FROM companies WHERE name=?;
SQL1_INPUTS = 1

[populateCompanies]
SQL1_1 = SELECT companies.name, companies.description, players.name, companies.tasks, companies.employees FROM companies INNER JOIN players ON companies.pid = players.pid;
OUTPUT = 1-STRING,2-STRING,3-STRING,4-STRING,5

[searchNames]
SQL1_1 = SELECT pid, name FROM players WHERE pid REGEXP ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING

[insertCompany]
SQL1_1 = INSERT INTO companies (pid, name, description, employees) VALUES (?,?,?,?);
SQL1_INPUTS = 1,2,3,4

[selectCompanyFunds]
SQL1_1 = SELECT bank FROM companies WHERE name=?;
SQL1_INPUTS = 1

[addCompanyFunds]
SQL1_1 = UPDATE companies SET bank=? WHERE name=?;
SQL1_INPUTS = 1,2

[updateCompanyDescription]
SQL1_1 = UPDATE companies SET description=? WHERE name=?;
SQL1_INPUTS = 1,2

[updateCompanyTasks]
SQL1_1 = UPDATE companies SET tasks=? WHERE name=?;
SQL1_INPUTS = 1,2

[updateCompanyEmployee]
SQL1_1 = UPDATE companies SET employees=? WHERE name=?;
SQL1_INPUTS = 1,2

[fetchArrests]
SQL1_1 = SELECT name, crimes, officer, time, bail, notes, (DATE_FORMAT(insertTime,"%e-%m-%Y %k:%i")) as insertTime FROM pd_db_arrests WHERE name LIKE ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING,3-STRING,4,5,6-STRING,7-STRING

[fetchTickets]
SQL1_1 = SELECT name, crimes, officer, cost, (DATE_FORMAT(insertTime,"%e-%m-%Y %k:%i")) as insertTime FROM pd_db_tickets WHERE name LIKE ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING,3-STRING,4,5-STRING

[fetchWarrants]
SQL1_1 = SELECT id, name, crimes, officer, notes, type, approved, active, completedBy, (DATE_FORMAT(insertTime,"%e-%m-%Y %k:%i")) as insertTime FROM pd_db_warrants WHERE name LIKE ?;
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3-STRING,4-STRING,5-STRING,6,7-STRING,8,9-STRING,10-STRING

[fetchLicenses]
SQL1_1 = SELECT name, licenses FROM players WHERE name LIKE ?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2

[populateWarrants]
SQL1_1 = SELECT id, name, crimes, officer, notes, type, approved, (DATE_FORMAT(insertTime,"%e-%m-%Y %k:%i")) as insertTime FROM pd_db_warrants WHERE active=1;
OUTPUT = 1,2-STRING,3-STRING,4-STRING,5-STRING,6,7-STRING,8-STRING

[insertWarrant]
SQL1_1 = INSERT INTO pd_db_warrants (name, crimes, officer, notes, type) VALUES (?,?,?,?,?);
SQL1_INPUTS = 1,2,3,4,5

[insertArrest]
SQL1_1 = INSERT INTO pd_db_arrests (name, crimes, officer, time, bail, notes) VALUES (?,?,?,?,?,?);
SQL1_INPUTS = 1,2,3,4,5,6

[insertTicket]
SQL1_1 = INSERT INTO pd_db_tickets (name, crimes, officer, cost) VALUES (?,?,?,?);
SQL1_INPUTS = 1,2,3,4

[updateWarrant]
SQL1_1 = UPDATE pd_db_warrants SET approved=? WHERE id=?;
SQL1_INPUTS = 1,2

[completeWarrant]
SQL1_1 = UPDATE pd_db_warrants SET active=0, completedBy=? WHERE id=?;
SQL1_INPUTS = 1,2

[removeWarrant]
SQL1_1 = DELETE FROM pd_db_warrants WHERE id=?;
SQL1_INPUTS = 1

[findAllPolice]
SQL1_1 = SELECT pid, name, copLevel, copDepartment FROM players WHERE copLevel!='0';
OUTPUT = 1-STRING,2-STRING,3,4

[logAction]
SQL1_1 = INSERT INTO logs (pid, name, action) VALUES (?,?,?);
SQL1_INPUTS = 1,2,3

[logRoutineAction]
SQL1_1 = INSERT INTO routine_logs (pid, name, action) VALUES (?,?,?);
SQL1_INPUTS = 1,2,3

[selectPersisVars]
SQL1_1 = SELECT threat, mayor, tax, bank, announcement FROM persis_vars WHERE serverID=?;
SQL1_INPUTS = 1
OUTPUT = 1-STRING,2-STRING,3,4,5-STRING

[updateThreat]
SQL1_1 = UPDATE persis_vars SET threat=?;
SQL1_INPUTS = 1

[updateAnnouncement]
SQL1_1 = UPDATE persis_vars SET announcement=?;
SQL1_INPUTS = 1

[updateGovTax]
SQL1_1 = UPDATE persis_vars SET tax=?;
SQL1_INPUTS = 1